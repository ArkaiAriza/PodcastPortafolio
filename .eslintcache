[{"C:\\Users\\macas\\Documents\\GitHub\\PodcastPortafolio\\src\\index.js":"1","C:\\Users\\macas\\Documents\\GitHub\\PodcastPortafolio\\src\\components\\App.js":"2","C:\\Users\\macas\\Documents\\GitHub\\PodcastPortafolio\\src\\theme.js":"3","C:\\Users\\macas\\Documents\\GitHub\\PodcastPortafolio\\src\\contexts\\PodcastContext.js":"4","C:\\Users\\macas\\Documents\\GitHub\\PodcastPortafolio\\src\\keys.js":"5","C:\\Users\\macas\\Documents\\GitHub\\PodcastPortafolio\\src\\devKeys.js":"6","C:\\Users\\macas\\Documents\\GitHub\\PodcastPortafolio\\src\\history.js":"7","C:\\Users\\macas\\Documents\\GitHub\\PodcastPortafolio\\src\\components\\LandingPage.js":"8","C:\\Users\\macas\\Documents\\GitHub\\PodcastPortafolio\\src\\components\\PlayComponent.js":"9","C:\\Users\\macas\\Documents\\GitHub\\PodcastPortafolio\\src\\components\\SearchResults.js":"10","C:\\Users\\macas\\Documents\\GitHub\\PodcastPortafolio\\src\\components\\PodcastInfo.js":"11","C:\\Users\\macas\\Documents\\GitHub\\PodcastPortafolio\\src\\apis\\listennotes.js":"12","C:\\Users\\macas\\Documents\\GitHub\\PodcastPortafolio\\src\\components\\SearchBar.js":"13","C:\\Users\\macas\\Documents\\GitHub\\PodcastPortafolio\\src\\components\\ItemsGrid.js":"14","C:\\Users\\macas\\Documents\\GitHub\\PodcastPortafolio\\src\\components\\Card.js":"15"},{"size":162,"mtime":1608987966576,"results":"16","hashOfConfig":"17"},{"size":946,"mtime":1608997580462,"results":"18","hashOfConfig":"17"},{"size":405,"mtime":1609084577090,"results":"19","hashOfConfig":"17"},{"size":2689,"mtime":1609015335075,"results":"20","hashOfConfig":"17"},{"size":415,"mtime":1608990158526,"results":"21","hashOfConfig":"17"},{"size":72,"mtime":1608988590309,"results":"22","hashOfConfig":"17"},{"size":89,"mtime":1608988314563,"results":"23","hashOfConfig":"17"},{"size":48823,"mtime":1609109233312,"results":"24","hashOfConfig":"17"},{"size":5661,"mtime":1609108584332,"results":"25","hashOfConfig":"17"},{"size":3098,"mtime":1609109717197,"results":"26","hashOfConfig":"17"},{"size":2408,"mtime":1609109901758,"results":"27","hashOfConfig":"17"},{"size":215,"mtime":1608993561139,"results":"28","hashOfConfig":"17"},{"size":1399,"mtime":1609083295915,"results":"29","hashOfConfig":"17"},{"size":2577,"mtime":1609094231237,"results":"30","hashOfConfig":"17"},{"size":1981,"mtime":1609094939580,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"fez1d3",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\macas\\Documents\\GitHub\\PodcastPortafolio\\src\\index.js",[],["64","65"],"C:\\Users\\macas\\Documents\\GitHub\\PodcastPortafolio\\src\\components\\App.js",[],"C:\\Users\\macas\\Documents\\GitHub\\PodcastPortafolio\\src\\theme.js",[],"C:\\Users\\macas\\Documents\\GitHub\\PodcastPortafolio\\src\\contexts\\PodcastContext.js",["66"],"import React, { useState, useEffect } from 'react';\r\nimport axios from '../apis/listennotes';\r\n\r\nconst PodcastContext = React.createContext({\r\n  term: '',\r\n  podcastList: [],\r\n  episodesList: [],\r\n  selectedEpisode: {},\r\n  selectedPodcast: {},\r\n  genres: [],\r\n  selectedGenre: {},\r\n  results: {\r\n    podcastList: [],\r\n    episodesList: [],\r\n  },\r\n});\r\n\r\nexport const PodcastProvider = ({ children }) => {\r\n  const [podcastList, setPodcastList] = useState([]);\r\n  const [episodeList, setEpisodeList] = useState([]);\r\n  const [genres, setGenres] = useState([]);\r\n  const [selectedGenre, setSelectedGenre] = useState({});\r\n  const [page, setPage] = useState(1);\r\n  const [selectedPodcast, setSelectedPodcast] = useState({});\r\n  const [selectedEpisode, setSelectedEpisode] = useState({});\r\n  const [results, setResults] = useState({\r\n    podcastList: [],\r\n    episodesList: [],\r\n  });\r\n\r\n  const getBestPodcasts = async () => {\r\n    const response = await axios.get(`/best_podcasts?page=${page}&region=us`);\r\n    setPodcastList(response.data.podcasts);\r\n  };\r\n\r\n  const getBestPodcastsByGenre = async () => {\r\n    if (genres) {\r\n      const response = await axios.get(\r\n        `/best_podcasts?genre_id=${selectedGenre.id}&page=${page}&region=us`\r\n      );\r\n      setPodcastList(response.data.podcasts);\r\n    }\r\n  };\r\n\r\n  const getGenres = async () => {\r\n    const response = await axios.get('/genres?top_level_only=1');\r\n    setGenres(response.data.genres);\r\n  };\r\n\r\n  const getEpisodesByPodcastId = async (podcastId) => {\r\n    const response = await axios.get(\r\n      `/podcasts/${podcastId}?sort=oldest_first`\r\n    );\r\n    setEpisodeList(response.data.episodes);\r\n  };\r\n\r\n  const searchInfo = async (text) => {\r\n    const responsePodcast = await axios.get(`/search?q=${text}&type=podcast`);\r\n    const responseEpisodes = await axios.get(`/search?q=${text}&type=episode`);\r\n    setResults({\r\n      ...results,\r\n      podcastList: responsePodcast.data.results,\r\n      episodesList: responseEpisodes.data.results,\r\n    });\r\n  };\r\n\r\n  /* useEffect(() => {\r\n  }, []); */\r\n\r\n  return (\r\n    <PodcastContext.Provider\r\n      value={{\r\n        genres,\r\n        podcastList,\r\n        selectedGenre,\r\n        page,\r\n        results,\r\n        setResults,\r\n        selectedPodcast,\r\n        setSelectedPodcast,\r\n        selectedEpisode,\r\n        setSelectedEpisode,\r\n        episodeList,\r\n        setEpisodeList,\r\n        setPage,\r\n        setSelectedGenre,\r\n        getGenres,\r\n        getBestPodcastsByGenre,\r\n        getBestPodcasts,\r\n        getEpisodesByPodcastId,\r\n        searchInfo,\r\n      }}\r\n    >\r\n      {children}\r\n    </PodcastContext.Provider>\r\n  );\r\n};\r\n\r\nexport default PodcastContext;\r\n","C:\\Users\\macas\\Documents\\GitHub\\PodcastPortafolio\\src\\keys.js",[],"C:\\Users\\macas\\Documents\\GitHub\\PodcastPortafolio\\src\\devKeys.js",[],"C:\\Users\\macas\\Documents\\GitHub\\PodcastPortafolio\\src\\history.js",[],"C:\\Users\\macas\\Documents\\GitHub\\PodcastPortafolio\\src\\components\\LandingPage.js",["67"],"C:\\Users\\macas\\Documents\\GitHub\\PodcastPortafolio\\src\\components\\PlayComponent.js",["68","69"],"C:\\Users\\macas\\Documents\\GitHub\\PodcastPortafolio\\src\\components\\SearchResults.js",["70"],"C:\\Users\\macas\\Documents\\GitHub\\PodcastPortafolio\\src\\components\\PodcastInfo.js",["71","72"],"C:\\Users\\macas\\Documents\\GitHub\\PodcastPortafolio\\src\\apis\\listennotes.js",[],"C:\\Users\\macas\\Documents\\GitHub\\PodcastPortafolio\\src\\components\\SearchBar.js",[],"C:\\Users\\macas\\Documents\\GitHub\\PodcastPortafolio\\src\\components\\ItemsGrid.js",["73"],"C:\\Users\\macas\\Documents\\GitHub\\PodcastPortafolio\\src\\components\\Card.js",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":1,"column":27,"nodeType":"80","messageId":"81","endLine":1,"endColumn":36},{"ruleId":"78","severity":1,"message":"82","line":1097,"column":5,"nodeType":"80","messageId":"81","endLine":1097,"endColumn":14},{"ruleId":"83","severity":1,"message":"84","line":118,"column":15,"nodeType":"85","endLine":122,"endColumn":17},{"ruleId":"83","severity":1,"message":"84","line":156,"column":17,"nodeType":"85","endLine":159,"endColumn":19},{"ruleId":"83","severity":1,"message":"84","line":54,"column":15,"nodeType":"85","endLine":63,"endColumn":17},{"ruleId":"86","severity":1,"message":"87","line":36,"column":6,"nodeType":"88","endLine":36,"endColumn":8,"suggestions":"89"},{"ruleId":"83","severity":1,"message":"84","line":44,"column":15,"nodeType":"85","endLine":44,"endColumn":50},{"ruleId":"78","severity":1,"message":"90","line":1,"column":17,"nodeType":"80","messageId":"81","endLine":1,"endColumn":27},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'getGenres' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getEpisodesByPodcastId' and 'selectedPodcast.id'. Either include them or remove the dependency array.","ArrayExpression",["93"],"'useContext' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"94","fix":"95"},"Update the dependencies array to be: [getEpisodesByPodcastId, selectedPodcast.id]",{"range":"96","text":"97"},[953,955],"[getEpisodesByPodcastId, selectedPodcast.id]"]